%p 
= render :partial => 'widgets/canvas_feed', :object => @widget, :as => :widget


- if current_user
  #follow_status
    #follow{:class => current_user.following?(@widget) ? "hide" : ""}
      %button Follow
    #stop_following{:class => current_user.following?(@widget) ? "" : "hide"}
      %button Stop following
      %p
        Following this widget

:javascript
  var $widget = $(".widget");
  var widget_id = $widget.data("widget_id");
  var widget_url = request.root_url + "widgets/" + widget_id;
  
  $("#follow button").click(function(){
    FollowHelper.toggle_follow_status();
    FollowHelper.follow('widget', widget_id, reload_hud);
  });
  
  $("#stop_following button").click(function(){
    FollowHelper.toggle_follow_status();
    FollowHelper.stop_following('widget', widget_id, reload_hud);    
  });
  
  countComments(widget_url, function(n){
   var text = "";
   if(n == 0){
     text = "Join the discussion";
   } else if(n == 1){
     text = "Show 1 comment.";
   } else {
     text = "Show " + n + " comments.";
   }
   $('.toggle_facebook_comments', $widget).text( text );
  
  });  
    
  $(".widget .toggle_facebook_comments").live('click', function(event){
    event.preventDefault();
    
    var $facebook_comments = $(this).siblings(".facebook_comments")  
    $facebook_comments.toggle();
    
    $(this).remove();    
    
  });
  
  FB.XFBML.parse();
  
  var user = #{current_user ? current_user.id : 0};
  
  FB.Event.subscribe('comment.create',
      function(response) {
          widget_id = _.last(response.href.split('/')) * 1;
          if (user !== 0){
            $.post("/follows/", {followable_type: 'widget', followable_id: widget_id}, function(){
              reload_hud();
              });
          }
          mpq.push(["track","comment_added", {'type':"facebook", "widget":widget_id,"user": user}]);
      }
  );
  
  FB.Event.subscribe('comment.remove',
      function(response) {
          mpq.push(["track","comment_removed" , {'type' : "facebook", 'widget' : widget_id, "user": user}]);
      }
  );

