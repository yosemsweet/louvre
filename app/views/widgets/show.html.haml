%p 
= render :partial => 'widgets/canvas_feed', :object => @widget, :as => :widget


- if current_user
  #follow_status
    #follow
      %button Follow
    #unfollow
      %button Stop following
      Following this widget

:javascript
  var $widget = $(".widget");
  var widget_url = request.root_url + "widgets/" + $widget.attr("data_widget_id");
  
  countComments(widget_url, function(n){
   var text = "";
   if(n == 0){
     text = "Join the discussion";
   } else if(n == 1){
     text = "Show 1 comment.";
   } else {
     text = "Show " + n + " comments.";
   }
   $('.toggle_facebook_comments', $widget).text( text );
  
  });
  
  var widget_id = #{@widget.id};
  
  var user = {
    is_logged_in : #{!current_user.nil?},
    is_following : #{current_user ? current_user.following?(@widget) : false}
  }
  
  if(user.is_logged_in){
    if(user.is_following){
      $("#follow").hide();
    } else {
      $("#unfollow").hide();
    }
  } else {
    $("#follow_status").hide();
  }
  
  var toggle_follow_status = function(){
    $("#follow").toggle();
    $("#unfollow").toggle();
  }
  
  $("#follow button").click(function(){
    toggle_follow_status();
    $.post("/follows/", {followable_type: 'widget', followable_id: widget_id}, function(){
      reload_hud();  
    });
    
  });
  
  $("#unfollow button").click(function(){
    toggle_follow_status();
    $.post("/follows/", {_method : "DELETE", followable_type: 'widget', followable_id: widget_id}, function(){
      reload_hud();
    });
    
  });  
    
  $(".widget .toggle_facebook_comments").live('click', function(event){
    event.preventDefault();
    
    var $facebook_comments = $(this).siblings(".facebook_comments")  
    $facebook_comments.toggle();
    
    $(this).remove();    
    
  });
  
  FB.XFBML.parse();
  
  var user = #{current_user ? current_user.id : 0};
  
  FB.Event.subscribe('comment.create',
      function(response) {
          widget_id = _.last(response.href.split('/')) * 1;
          if (user !== 0){
            $.post("/follows/", {followable_type: 'widget', followable_id: widget_id}, function(){
              reload_hud();
              });
          }
          mpq.push(["track","comment_added", {'type':"facebook", "widget":widget_id,"user": user}]);
      }
  );
  
  FB.Event.subscribe('comment.remove',
      function(response) {
          mpq.push(["track","comment_removed" , {'type' : "facebook", 'widget' : widget_id, "user": user}]);
      }
  );

