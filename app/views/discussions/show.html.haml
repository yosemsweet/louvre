- width = params[:width]||600
- defined? current_user ? user = current_user.id : user = 0
.fb-discussion
  %h2
    Discussions
  = comments_for(@obj, :href => @href, :width => width)

:javascript
  FB.XFBML.parse();
  
  function updateCount( ref ){
    count = getCommentCount(ref, function(cnt)
    {
      alert('here');
      $('div[comment_href="'+ref+'"]').html( cnt + " comments");
      $('li[comment_href="'+ref+'"]').attr("comments", cnt);
    });   
  }
  
  function getCommentCount(ref, callback){
   FB.api('/comments?ids=' + ref, function(response) {
      test = response;
      length = 0;
      alert( "hello world 2 = " + ref );
      if( ref in response ){
        alert( "hello world 4a = " + ref );
        pageinfo = response[ref]; 
        if( "data" in pageinfo ){
          length = pageinfo["data"]["length"];
        }
      }
      alert( 'leaving getCommentCount = ' + length );
      callback(length);
    });
  }
  
  FB.Event.subscribe('comment.create',
      function(response) {
          mpq.push(["track","comment_added", {'type':"facebook", "#{@obj.class.name}":"#{@obj.id}","user": "#{user}"}]);
          updateCount(response['href']);
      }
  );
  
  FB.Event.subscribe('comment.remove',
      function(response) {
          mpq.push(["track","comment_removed" , {'type' : "facebook", '#{@obj.class.name}' : "#{@obj.id}", "user":"#{user}"}]);
      }
  );
  